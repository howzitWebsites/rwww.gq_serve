{"version":3,"sources":["App.tsx","serviceWorker.ts","index.tsx"],"names":["App","Container","fluid","className","Row","Col","Alert","variant","Heading","Card","Img","src","Body","Title","Text","Button","href","target","alt","aria-label","style","height","paddingBottom","paddingRight","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sPAuIeA,MAjIf,WACE,OACE,kBAACC,EAAA,EAAD,CAAWC,MAAM,KAAKC,UAAU,QAC9B,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,QAAQ,UAAUJ,UAAU,QACjC,kBAACG,EAAA,EAAME,QAAP,0CACA,2QAQF,kBAACC,EAAA,EAAD,CAAMN,UAAU,QACd,kBAACM,EAAA,EAAKC,IAAN,CAAUH,QAAQ,MAAMI,IAA8B,cAGxD,kBAACF,EAAA,EAAD,CAAMN,UAAU,QACd,kBAACM,EAAA,EAAKG,KAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,oBACA,kBAACJ,EAAA,EAAKK,KAAN,kDAC6C,IAC3C,+DAFF,mMAUJ,kBAACL,EAAA,EAAD,CAAMN,UAAU,QACd,kBAACM,EAAA,EAAKC,IAAN,CACEH,QAAQ,MACRI,IAA8B,cAEhC,kBAACF,EAAA,EAAKG,KAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,mDAGA,kBAACJ,EAAA,EAAKK,KAAN,KACE,6BACA,yCACA,4BACE,gEACA,4DACA,mFACA,4EACA,4BACE,wCADF,+BAGA,0FAIF,sCACA,qEACyC,qCADzC,IACwD,IACtD,sCAFF,QAEqB,wCAFrB,MAEyC,IACvC,uEACA,6BACA,yJASR,kBAACL,EAAA,EAAD,CAAMN,UAAU,QACd,kBAACM,EAAA,EAAKG,KAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,qBACA,kBAACJ,EAAA,EAAKK,KAAN,KACE,kGAIA,6BACA,kBAACV,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACU,EAAA,EAAD,CACER,QAAQ,oBACRS,KAAK,wJACLC,OAAO,MAEP,yBACEC,IAAI,aACJC,aAAW,QACXR,IAA8B,WAC9BS,MAAO,CACLC,OAAQ,OACRC,cAAe,MACfC,aAAc,SAZpB,aAkBF,kBAAClB,EAAA,EAAD,KACE,kBAACU,EAAA,EAAD,CACER,QAAQ,oBACRS,KAAK,4CACLC,OAAO,OAEP,yBACEC,IAAI,aACJC,aAAW,QACXR,IAA8B,UAC9BS,MAAO,CACLC,OAAQ,OACRC,cAAe,MACfC,aAAc,SAZpB,6BC/FAC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDkIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1bf16e8f.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Button, Container, Col, Row, Card, Alert } from \"react-bootstrap\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return (\n    <Container fluid=\"md\" className=\"mb-4\">\n      <Row>\n        <Col>\n          <Alert variant=\"success\" className=\"mt-4\">\n            <Alert.Heading>Dont forget your 2 free sessions!</Alert.Heading>\n            <p>\n              If you are still deciding on if you want to join the 8 week\n              challenge or if you are curious about the trainig, Please scroll\n              to the bottom of the page and get in touch with Wendy. You will\n              get 2 free sessions to see if this is for you.\n            </p>\n          </Alert>\n\n          <Card className=\"mt-4\">\n            <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + \"/rwh.png\"} />\n          </Card>\n\n          <Card className=\"mt-4\">\n            <Card.Body>\n              <Card.Title>About Wendy</Card.Title>\n              <Card.Text>\n                Wendy Fleming is a Personal Trainer on the{\" \"}\n                <b>South Coast of KZN, South Africa</b>. She has a 3 year\n                National Diploma in peforming arts (Ballet) as well as a group\n                trainers and pilaties certification. Her main speciality is\n                weight loss and rehabilitation/sports training.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n\n          <Card className=\"mt-4\">\n            <Card.Img\n              variant=\"top\"\n              src={process.env.PUBLIC_URL + \"/wenz.png\"}\n            />\n            <Card.Body>\n              <Card.Title>\n                More about the 8 week weightloss challenge\n              </Card.Title>\n              <Card.Text>\n                <br />\n                <h6>Overview:</h6>\n                <ul>\n                  <li>Entries close 25th February 2021</li>\n                  <li>3 sessions via Zoom per week</li>\n                  <li>1 healthy eating suggestion programme for each week</li>\n                  <li>Communicate with Wendy anytime over WhatsApp</li>\n                  <li>\n                    <b>Mandatory</b> Weekly weigh in with Wendy\n                  </li>\n                  <li>\n                    Support for portions and food by Wendy 1 day of each week\n                  </li>\n                </ul>\n                <h6>Times:</h6>\n                <p>\n                  The three weekly Zoom classes are on a <b>Monday</b>,{\" \"}\n                  <b>Tuesday</b> and <b>Wednesday</b> at{\" \"}\n                  <b>18:45 GMT+2 (South Africa Standard Time)</b>\n                  <hr />\n                  <b>\n                    We are looking forward to hosting all participants from any\n                    country so long as they can make the times described above\n                  </b>\n                </p>\n              </Card.Text>\n            </Card.Body>\n          </Card>\n\n          <Card className=\"mt-4\">\n            <Card.Body>\n              <Card.Title>Get Started!</Card.Title>\n              <Card.Text>\n                <h6>\n                  To get started please contact Wendy through any of the links\n                  below\n                </h6>\n                <hr />\n                <Row>\n                  <Col>\n                    <Button\n                      variant=\"outline-secondary\"\n                      href=\"https://api.whatsapp.com/send?phone=27822530353&text=Hi%20Wendy%2C%20I%20am%20getting%20in%20touch%20with%20you%20about%20the%20Remote%20Workouts!%20\"\n                      target=\"wa\"\n                    >\n                      <img\n                        alt=\"img_failed\"\n                        aria-label=\"other\"\n                        src={process.env.PUBLIC_URL + \"/was.png\"}\n                        style={{\n                          height: \"20px\",\n                          paddingBottom: \"3px\",\n                          paddingRight: \"3px\",\n                        }}\n                      />\n                      Whatsapp\n                    </Button>\n                  </Col>\n                  <Col>\n                    <Button\n                      variant=\"outline-secondary\"\n                      href=\"https://instagram.com/wendyflemingfitness\"\n                      target=\"_ig\"\n                    >\n                      <img\n                        alt=\"img_failed\"\n                        aria-label=\"other\"\n                        src={process.env.PUBLIC_URL + \"/ig.png\"}\n                        style={{\n                          height: \"20px\",\n                          paddingBottom: \"3px\",\n                          paddingRight: \"3px\",\n                        }}\n                      />\n                      Instagram via DM\n                    </Button>\n                  </Col>\n                </Row>\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}